{"pageProps":{"note":{"id":"7f5q8iao9z09w1u8lrjnkca","title":"Pirate Island Conquer Part 1","desc":"","updated":1664742890865,"created":1591018080000,"tags":["javascript","5-kyu","codewars","answer"],"custom":{},"fname":"codewars.59604925a68b04598e00001e","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"7c88e0b6e6903817a50c499d251ac05b","links":[{"type":"frontmatterTag","from":{"fname":"codewars.59604925a68b04598e00001e","id":"7f5q8iao9z09w1u8lrjnkca","vaultName":"bits-and-bobbles"},"value":"tags.javascript","alias":"javascript","xvault":false,"to":{"fname":"tags.javascript"}},{"type":"frontmatterTag","from":{"fname":"codewars.59604925a68b04598e00001e","id":"7f5q8iao9z09w1u8lrjnkca","vaultName":"bits-and-bobbles"},"value":"tags.5-kyu","alias":"5-kyu","xvault":false,"to":{"fname":"tags.5-kyu"}},{"type":"frontmatterTag","from":{"fname":"codewars.59604925a68b04598e00001e","id":"7f5q8iao9z09w1u8lrjnkca","vaultName":"bits-and-bobbles"},"value":"tags.codewars","alias":"codewars","xvault":false,"to":{"fname":"tags.codewars"}},{"type":"frontmatterTag","from":{"fname":"codewars.59604925a68b04598e00001e","id":"7f5q8iao9z09w1u8lrjnkca","vaultName":"bits-and-bobbles"},"value":"tags.answer","alias":"answer","xvault":false,"to":{"fname":"tags.answer"}}],"anchors":{"javascript":{"type":"header","text":"JavaScript","value":"javascript","line":13,"column":0,"depth":3}},"children":[],"parent":"b42r0s0g9g25atrilu3dwqb","data":{}},"body":"<h1 id=\"pirate-island-conquer-part-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pirate-island-conquer-part-1\"></a>Pirate Island Conquer Part 1</h1>\n<h3 id=\"javascript\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#javascript\"></a>JavaScript</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> mapSize <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> uninhabitedIslands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    marineIslands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">conquerIsland</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">map</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">findIslands</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>uninhabitedIslands<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&#x26;&#x26;</span> marineIslands<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> uninhabitedIslands<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>marineIslands<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">!</span>uninhabitedIslands<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> marineIslands<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> marineSolutions <span class=\"token operator\">=</span> <span class=\"token function\">getClosest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> marineIslands<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> finalSolutions <span class=\"token operator\">=</span> <span class=\"token function\">getClosest</span><span class=\"token punctuation\">(</span>marineSolutions<span class=\"token punctuation\">,</span> uninhabitedIslands<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>finalSolutions<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> finalSolutions <span class=\"token operator\">=</span> finalSolutions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> finalSolutions<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">findIslands</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">map</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Reset the arrays</span>\n  uninhabitedIslands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  marineIslands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// iterate over the whole map, recording islands</span>\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&#x3C;</span> mapSize<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&#x3C;</span> mapSize<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> coordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> currentChar <span class=\"token operator\">=</span> map<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>currentChar <span class=\"token operator\">==</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Uninhabited island; highest priority</span>\n        uninhabitedIslands<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>currentChar <span class=\"token operator\">==</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Marine island; lower priority</span>\n        marineIslands<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">coordinates</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> coordinates<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> coordinates<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token doc-comment comment\">/**\n * Returns the array of the closest island or islands.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getClosest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">solutions<span class=\"token punctuation\">,</span> islands<span class=\"token punctuation\">,</span> marine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> minDistance <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">999</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> islands<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> currentIsland <span class=\"token operator\">=</span> islands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> <span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span>currentIsland<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&#x3C;=</span> minDistance<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> previousMin <span class=\"token operator\">=</span> minDistance<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      minDistance <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>distance<span class=\"token punctuation\">,</span> marine <span class=\"token operator\">?</span> <span class=\"token string\">'m'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>solutions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> distance <span class=\"token operator\">==</span> <span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span>solutions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Already a solution of equivalent distance</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>marine <span class=\"token operator\">&#x26;&#x26;</span> previousMin <span class=\"token operator\">===</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          solutions<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>currentIsland<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n          solutions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentIsland<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Lowest solution found so far</span>\n        solutions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentIsland<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword control-flow\">return</span> solutions<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<h2 id=\"tags\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a>Tags</h2>\n<ol>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">javascript (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">5-kyu (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">codewars (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">answer (Private)</a></li>\n</ol>","noteIndex":{"id":"igmh0dqdu0a6b80x03hhek7","title":"Root","desc":"The base of the project tree.","updated":1669496499921,"created":1663712926920,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"9b7c0238313c23f1c68b7df7aed0ce98","links":[{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"stack-overflow","alias":"Stack Overflow","position":{"start":{"line":8,"column":3,"offset":311},"end":{"line":8,"column":36,"offset":344},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"stack-overflow"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"unix-stack-exchange","alias":"Unix & Linux Stack Exchange","position":{"start":{"line":9,"column":3,"offset":347},"end":{"line":9,"column":54,"offset":398},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"unix-stack-exchange"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codewars","alias":"Codewars","position":{"start":{"line":10,"column":3,"offset":401},"end":{"line":10,"column":24,"offset":422},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codewars"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codepen","alias":"Codepens","position":{"start":{"line":11,"column":3,"offset":425},"end":{"line":11,"column":23,"offset":445},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codepen"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"euler","alias":"Euler Project","position":{"start":{"line":12,"column":3,"offset":448},"end":{"line":12,"column":26,"offset":471},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"euler"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"foobar","alias":"Google FooBar","position":{"start":{"line":13,"column":3,"offset":474},"end":{"line":13,"column":27,"offset":498},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"foobar"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"hackthebox","alias":"HackTheBox Ops Notes","position":{"start":{"line":14,"column":3,"offset":501},"end":{"line":14,"column":38,"offset":536},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"hackthebox"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"medium","alias":"Medium Articles","position":{"start":{"line":15,"column":3,"offset":539},"end":{"line":15,"column":29,"offset":565},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"medium"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"cybersoc","alias":"CyberSoc","position":{"start":{"line":16,"column":3,"offset":568},"end":{"line":16,"column":24,"offset":589},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"cybersoc"}}],"anchors":{"welcome-to-bits-and-bobbles":{"type":"header","text":"Welcome to bits-and-bobbles","value":"welcome-to-bits-and-bobbles","line":8,"column":0,"depth":1},"whats-here":{"type":"header","text":"What's here?","value":"whats-here","line":12,"column":0,"depth":2}},"children":["onxeajmr7gys0sljngxqj91","b42r0s0g9g25atrilu3dwqb","0hdyi29cv9mqvatjv6zaj7q","1ug1cew47dmye00nz5trwaa","vm8lo115nu0nbqvdz24ugf1","yqqzccfk3pgp9zvpzpptltr","6jdidhs50140ik9c0nhx7kl","djibocawvr9giosnl1nlori","gn88vvdrli6x8uz1bg9a263"],"parent":null,"data":{},"body":"\n# Welcome to bits-and-bobbles\n\nThis is the root of my project, an assortment of fragments of code that I have written in the past or used frequently enough that I think they are worth sharing. Please feel free to use them as you see fit, and share and leave a star if you find them useful!\n\n## What's here?\n\n- [[Stack Overflow|stack-overflow]]\n- [[Unix & Linux Stack Exchange|unix-stack-exchange]]\n- [[Codewars|codewars]]\n- [[Codepens|codepen]]\n- [[Euler Project|euler]]\n- [[Google FooBar|foobar]]\n- [[HackTheBox Ops Notes|hackthebox]]\n- [[Medium Articles|medium]]\n- [[CyberSoc|cybersoc]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"assetsPrefix":"/bits-and-bobbles","siteUrl":"https://ajmeese7.github.io","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}