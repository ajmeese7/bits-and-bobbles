{"pageProps":{"note":{"id":"ss2g16y534704hfkk5xwkug","title":"Test numerical range with Jasmine","desc":"Test a function which contains current time in its return value using jasmine","updated":1664735204730,"created":1566924840000,"tags":["javascript","jasmine","stack-overflow","answer"],"custom":{},"fname":"stack-overflow.57675174","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"224aabccc7bd8b8b52d6bd2c2f2e1d37","links":[{"type":"frontmatterTag","from":{"fname":"stack-overflow.57675174","id":"ss2g16y534704hfkk5xwkug","vaultName":"bits-and-bobbles"},"value":"tags.javascript","alias":"javascript","xvault":false,"to":{"fname":"tags.javascript"}},{"type":"frontmatterTag","from":{"fname":"stack-overflow.57675174","id":"ss2g16y534704hfkk5xwkug","vaultName":"bits-and-bobbles"},"value":"tags.jasmine","alias":"jasmine","xvault":false,"to":{"fname":"tags.jasmine"}},{"type":"frontmatterTag","from":{"fname":"stack-overflow.57675174","id":"ss2g16y534704hfkk5xwkug","vaultName":"bits-and-bobbles"},"value":"tags.stack-overflow","alias":"stack-overflow","xvault":false,"to":{"fname":"tags.stack-overflow"}},{"type":"frontmatterTag","from":{"fname":"stack-overflow.57675174","id":"ss2g16y534704hfkk5xwkug","vaultName":"bits-and-bobbles"},"value":"tags.answer","alias":"answer","xvault":false,"to":{"fname":"tags.answer"}}],"anchors":{},"children":[],"parent":"djibocawvr9giosnl1nlori","data":{}},"body":"<h1 id=\"test-numerical-range-with-jasmine\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#test-numerical-range-with-jasmine\"></a>Test numerical range with Jasmine</h1>\n<blockquote>\n<p>See <a href=\"https://stackoverflow.com/a/57675174/6456163\">here</a> for the original answer.</p>\n</blockquote>\n<p>Depending on how specific you need it to be, you could create a range of +-1 second or some similar number with <code>toBeWithinRange</code> from the <a href=\"https://www.npmjs.com/package/jasmine-expect\">Jasmine Matchers</a> package:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>createdTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBeWithinRange</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>With this method you will have to test the <code>createdTime</code> separately from the other test, but that shouldn't be too big of an issue. You just need to assign the return property that you want to the variable <code>createdTime</code>.</p>\n<p><strong>Edit</strong>- A similar method with a more clear matcher is using <code>toBeNear</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>createdTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBeNear</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>This will be true if the date assigned to createdTime is within two seconds of the date when the test runs.</p>\n<p><strong>Edit 2</strong>- to exclude object keys when testing, you can follow an example <a href=\"https://stackoverflow.com/a/24487384/6456163\">here</a>. This is how you would do it in your case:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> joc <span class=\"token operator\">=</span> jasmine<span class=\"token punctuation\">.</span><span class=\"token property-access\">objectContaining</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token function\">joc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr>\n<h2 id=\"tags\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a>Tags</h2>\n<ol>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">javascript (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">jasmine (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">stack-overflow (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">answer (Private)</a></li>\n</ol>","noteIndex":{"id":"igmh0dqdu0a6b80x03hhek7","title":"Root","desc":"The base of the project tree.","updated":1669496499921,"created":1663712926920,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"9b7c0238313c23f1c68b7df7aed0ce98","links":[{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"stack-overflow","alias":"Stack Overflow","position":{"start":{"line":8,"column":3,"offset":311},"end":{"line":8,"column":36,"offset":344},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"stack-overflow"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"unix-stack-exchange","alias":"Unix & Linux Stack Exchange","position":{"start":{"line":9,"column":3,"offset":347},"end":{"line":9,"column":54,"offset":398},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"unix-stack-exchange"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codewars","alias":"Codewars","position":{"start":{"line":10,"column":3,"offset":401},"end":{"line":10,"column":24,"offset":422},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codewars"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codepen","alias":"Codepens","position":{"start":{"line":11,"column":3,"offset":425},"end":{"line":11,"column":23,"offset":445},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codepen"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"euler","alias":"Euler Project","position":{"start":{"line":12,"column":3,"offset":448},"end":{"line":12,"column":26,"offset":471},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"euler"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"foobar","alias":"Google FooBar","position":{"start":{"line":13,"column":3,"offset":474},"end":{"line":13,"column":27,"offset":498},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"foobar"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"hackthebox","alias":"HackTheBox Ops Notes","position":{"start":{"line":14,"column":3,"offset":501},"end":{"line":14,"column":38,"offset":536},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"hackthebox"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"medium","alias":"Medium Articles","position":{"start":{"line":15,"column":3,"offset":539},"end":{"line":15,"column":29,"offset":565},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"medium"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"cybersoc","alias":"CyberSoc","position":{"start":{"line":16,"column":3,"offset":568},"end":{"line":16,"column":24,"offset":589},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"cybersoc"}}],"anchors":{"welcome-to-bits-and-bobbles":{"type":"header","text":"Welcome to bits-and-bobbles","value":"welcome-to-bits-and-bobbles","line":8,"column":0,"depth":1},"whats-here":{"type":"header","text":"What's here?","value":"whats-here","line":12,"column":0,"depth":2}},"children":["onxeajmr7gys0sljngxqj91","b42r0s0g9g25atrilu3dwqb","0hdyi29cv9mqvatjv6zaj7q","1ug1cew47dmye00nz5trwaa","vm8lo115nu0nbqvdz24ugf1","yqqzccfk3pgp9zvpzpptltr","6jdidhs50140ik9c0nhx7kl","djibocawvr9giosnl1nlori","gn88vvdrli6x8uz1bg9a263"],"parent":null,"data":{},"body":"\n# Welcome to bits-and-bobbles\n\nThis is the root of my project, an assortment of fragments of code that I have written in the past or used frequently enough that I think they are worth sharing. Please feel free to use them as you see fit, and share and leave a star if you find them useful!\n\n## What's here?\n\n- [[Stack Overflow|stack-overflow]]\n- [[Unix & Linux Stack Exchange|unix-stack-exchange]]\n- [[Codewars|codewars]]\n- [[Codepens|codepen]]\n- [[Euler Project|euler]]\n- [[Google FooBar|foobar]]\n- [[HackTheBox Ops Notes|hackthebox]]\n- [[Medium Articles|medium]]\n- [[CyberSoc|cybersoc]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"assetsPrefix":"/bits-and-bobbles","siteUrl":"https://ajmeese7.github.io","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}