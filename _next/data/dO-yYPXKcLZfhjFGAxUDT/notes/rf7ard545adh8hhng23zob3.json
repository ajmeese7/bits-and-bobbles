{"pageProps":{"note":{"id":"rf7ard545adh8hhng23zob3","title":"Papers, Please","desc":"","updated":1664741509475,"created":1663852200000,"tags":["python","3-kyu","codewars","answer"],"custom":{},"fname":"codewars.59d582cafbdd0b7ef90000a0","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"128f58f61a255396d6091c9fca18fc66","links":[{"type":"frontmatterTag","from":{"fname":"codewars.59d582cafbdd0b7ef90000a0","id":"rf7ard545adh8hhng23zob3","vaultName":"bits-and-bobbles"},"value":"tags.python","alias":"python","xvault":false,"to":{"fname":"tags.python"}},{"type":"frontmatterTag","from":{"fname":"codewars.59d582cafbdd0b7ef90000a0","id":"rf7ard545adh8hhng23zob3","vaultName":"bits-and-bobbles"},"value":"tags.3-kyu","alias":"3-kyu","xvault":false,"to":{"fname":"tags.3-kyu"}},{"type":"frontmatterTag","from":{"fname":"codewars.59d582cafbdd0b7ef90000a0","id":"rf7ard545adh8hhng23zob3","vaultName":"bits-and-bobbles"},"value":"tags.codewars","alias":"codewars","xvault":false,"to":{"fname":"tags.codewars"}},{"type":"frontmatterTag","from":{"fname":"codewars.59d582cafbdd0b7ef90000a0","id":"rf7ard545adh8hhng23zob3","vaultName":"bits-and-bobbles"},"value":"tags.answer","alias":"answer","xvault":false,"to":{"fname":"tags.answer"}}],"anchors":{"python":{"type":"header","text":"Python","value":"python","line":13,"column":0,"depth":3}},"children":[],"parent":"b42r0s0g9g25atrilu3dwqb","data":{}},"body":"<h1 id=\"papers-please\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#papers-please\"></a>Papers, Please</h1>\n<h3 id=\"python\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a>Python</h3>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Inspector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>allowed_countries <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>requirements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>document_expiration_date <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">(</span>year<span class=\"token operator\">=</span><span class=\"token number\">1982</span><span class=\"token punctuation\">,</span> month<span class=\"token operator\">=</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> day<span class=\"token operator\">=</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>criminal <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        self<span class=\"token punctuation\">.</span>current_entrant_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">receive_bulletin</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Update the allowed countries list with new countries</span>\n        allowed_countries <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"Allow citizens of (.*)\"</span><span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>allowed_countries<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span> allowed_countries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Update the allowed countries list by removing denied countries</span>\n        denied_countries <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"Deny citizens of (.*)\"</span><span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>allowed_countries <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>\n          <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> denied_countries<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>allowed_countries<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Update the list of requirements</span>\n        new_requirements <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"(.*)(?&#x3C;!no longer) require (.*)\"</span><span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>requirements<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>createRequirementList<span class=\"token punctuation\">(</span>new_requirements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        remove_requirements <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"(.*) no longer require (.*)\"</span><span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>requirements <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>\n          <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>createRequirementList<span class=\"token punctuation\">(</span>remove_requirements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            self<span class=\"token punctuation\">.</span>requirements\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Updates the criminal of the day</span>\n        criminal <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"Wanted by the State: (.*)\"</span><span class=\"token punctuation\">,</span> bulletin<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> criminal <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span>\n            names <span class=\"token operator\">=</span> criminal<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n            criminal <span class=\"token operator\">=</span> names<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> names<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>criminal <span class=\"token operator\">=</span> criminal\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> documents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Create objects out of the data from the available documents</span>\n        <span class=\"token comment\">##</span>\n        vaccination_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"certificate_of_vaccination\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        vaccination_card <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>vaccination_info<span class=\"token punctuation\">)</span>\n\n        passport_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"passport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        passport <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>passport_info<span class=\"token punctuation\">)</span>\n\n        access_permit_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"access_permit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        access_permit <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>access_permit_info<span class=\"token punctuation\">)</span>\n\n        grant_of_asylum_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"grant_of_asylum\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        grant_of_asylum <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>grant_of_asylum_info<span class=\"token punctuation\">)</span>\n\n        diplomatic_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"diplomatic_authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        diplomatic_authorization <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>diplomatic_info<span class=\"token punctuation\">)</span>\n\n        work_pass_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"work_pass\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        work_pass <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>work_pass_info<span class=\"token punctuation\">)</span>\n\n        id_card_info <span class=\"token operator\">=</span> documents<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"ID_card\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        id_card <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentData<span class=\"token punctuation\">(</span>id_card_info<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Add entrant information for use across functions</span>\n        <span class=\"token comment\">##</span>\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"vaccination_card\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vaccination_card\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"passport\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> passport\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"grant_of_asylum\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> grant_of_asylum\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"access_permit\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> access_permit\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"diplomatic_authorization\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> diplomatic_authorization\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"work_pass\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> work_pass\n        self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID_card\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> id_card\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Entrant is detained</span>\n        <span class=\"token comment\">##</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span>passport <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>criminal <span class=\"token operator\">==</span> passport<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span>\n          <span class=\"token punctuation\">(</span>access_permit <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>criminal <span class=\"token operator\">==</span> access_permit<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span>\n          <span class=\"token punctuation\">(</span>grant_of_asylum <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>criminal <span class=\"token operator\">==</span> grant_of_asylum<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Detainment: Entrant is a wanted criminal.\"</span>\n\n        id_list <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentValues<span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> id_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> id_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Detainment: ID number mismatch.\"</span>\n\n        nation_list <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentValues<span class=\"token punctuation\">(</span><span class=\"token string\">\"nation\"</span><span class=\"token punctuation\">)</span>\n        nation <span class=\"token operator\">=</span> nation_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nation_list<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> nation_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> nation_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Detainment: nationality mismatch.\"</span>\n\n        dob_list <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentValues<span class=\"token punctuation\">(</span><span class=\"token string\">\"dob\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> dob_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> dob_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Detainment: date of birth mismatch.\"</span>\n\n        name_list <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getDocumentValues<span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> name_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> name_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Detainment: name mismatch.\"</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Entrant is denied for an invalid document</span>\n        <span class=\"token comment\">##</span>\n        diplomatic_nations <span class=\"token operator\">=</span> diplomatic_authorization<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"access\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> diplomatic_nations <span class=\"token keyword\">and</span> <span class=\"token string\">\"Arstotzka\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> diplomatic_nations<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: invalid diplomatic authorization.\"</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Entrant is denied from the country for an expired document</span>\n        <span class=\"token comment\">##</span>\n        <span class=\"token keyword\">if</span> passport<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"expiration\"</span><span class=\"token punctuation\">,</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> self<span class=\"token punctuation\">.</span>document_expiration_date<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: passport expired.\"</span>\n        <span class=\"token keyword\">elif</span> grant_of_asylum<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"expiration\"</span><span class=\"token punctuation\">,</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> self<span class=\"token punctuation\">.</span>document_expiration_date<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: grant of asylum expired.\"</span>\n        <span class=\"token keyword\">elif</span> access_permit<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"expiration\"</span><span class=\"token punctuation\">,</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> self<span class=\"token punctuation\">.</span>document_expiration_date<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: access permit expired.\"</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Entrant is a member of a denied country</span>\n        <span class=\"token comment\">##</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> nation <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>allowed_countries<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: citizen of banned nation.\"</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Assign the entrant groups based on their provided documentation</span>\n        <span class=\"token comment\">##</span>\n        groups <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Entrants\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> nation <span class=\"token operator\">==</span> <span class=\"token string\">\"Arstotzka\"</span><span class=\"token punctuation\">:</span>\n            groups<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"Citizens of Arstotzka\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            groups<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"Foreigners\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> groups<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"Citizens of \"</span> <span class=\"token operator\">+</span> nation<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> access_permit<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"purpose\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"WORK\"</span><span class=\"token punctuation\">:</span>\n            groups<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"Workers\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\">##</span>\n        <span class=\"token comment\"># Entrant is denied from the country for not meeting bulletin requirements</span>\n        <span class=\"token comment\">##</span>\n        <span class=\"token keyword\">for</span> requirement <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>requirements<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> requirement<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> groups<span class=\"token punctuation\">:</span>\n                requirement_met <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>checkForRequirement<span class=\"token punctuation\">(</span>requirement<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> requirement_met <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Entry denied: \"</span> <span class=\"token operator\">+</span> requirement_met\n\n        <span class=\"token comment\"># Entrant is allowed into the country</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nation <span class=\"token operator\">==</span> <span class=\"token string\">\"Arstotzka\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Glory to Arstotzka.\"</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Cause no trouble.\"</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getDocumentValues</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"vaccination_card\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"passport\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"grant_of_asylum\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"access_permit\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"diplomatic_authorization\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"work_pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        values<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID_card\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">createRequirementList</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> requirement_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> requirement <span class=\"token keyword\">in</span> requirement_list<span class=\"token punctuation\">:</span>\n            citizenship_requirement <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"Citizens of (.*)\"</span><span class=\"token punctuation\">,</span> requirement<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> citizenship_requirement<span class=\"token punctuation\">:</span>\n                requirement_list<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>requirement<span class=\"token punctuation\">)</span>\n                countries <span class=\"token operator\">=</span> requirement<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span>\n                requirement_list<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Citizens of \"</span> <span class=\"token operator\">+</span> x <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"Citizens of \"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> x<span class=\"token punctuation\">,</span> requirement<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  countries\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> requirement_list\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">checkForRequirement</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> requirement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"vaccination\"</span> <span class=\"token keyword\">in</span> requirement<span class=\"token punctuation\">:</span>\n            vaccination_card <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"vaccination_card\"</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> vaccination_card<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required certificate of vaccination.\"</span>\n            vaccine <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\" vaccination\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> requirement<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> vaccination_card <span class=\"token keyword\">or</span> <span class=\"token keyword\">not</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>vaccine<span class=\"token punctuation\">,</span> vaccination_card<span class=\"token punctuation\">[</span><span class=\"token string\">\"vaccines\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required vaccination.\"</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"passport\"</span> <span class=\"token keyword\">in</span> requirement<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"passport\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required passport.\"</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"access permit\"</span> <span class=\"token keyword\">in</span> requirement<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"access_permit\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span>\n              <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"grant_of_asylum\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span>\n              <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"diplomatic_authorization\"</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required access permit.\"</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"work pass\"</span> <span class=\"token keyword\">in</span> requirement<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"work_pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required work pass.\"</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"ID card\"</span> <span class=\"token keyword\">in</span> requirement<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>current_entrant_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID_card\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"missing required ID card.\"</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getDocumentData</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        docData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> doc<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">\"DOB: \"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span>\n                dob <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"DOB: (.*)\"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">)</span>\n                dob_parts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\.\"</span><span class=\"token punctuation\">,</span> dob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                docData<span class=\"token punctuation\">[</span><span class=\"token string\">\"dob\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">(</span>year<span class=\"token operator\">=</span>dob_parts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> month<span class=\"token operator\">=</span>dob_parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> day<span class=\"token operator\">=</span>dob_parts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> <span class=\"token string\">\"EXP: \"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span>\n                expiration <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getRegex<span class=\"token punctuation\">(</span><span class=\"token string\">\"EXP: (.*)\"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">)</span>\n                expiration_parts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\.\"</span><span class=\"token punctuation\">,</span> expiration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                docData<span class=\"token punctuation\">[</span><span class=\"token string\">\"expiration\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">(</span>year<span class=\"token operator\">=</span>expiration_parts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> month<span class=\"token operator\">=</span>expiration_parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> day<span class=\"token operator\">=</span>expiration_parts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                key<span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\": \"</span><span class=\"token punctuation\">)</span>\n                key <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                docData<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n\n        <span class=\"token keyword\">return</span> docData\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getRegex</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">,</span> regex<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> regex<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> regex <span class=\"token keyword\">else</span> <span class=\"token string\">\"\"</span>\n</code></pre>\n<hr>\n<h2 id=\"tags\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a>Tags</h2>\n<ol>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">python (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">3-kyu (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">codewars (Private)</a></li>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">answer (Private)</a></li>\n</ol>","noteIndex":{"id":"igmh0dqdu0a6b80x03hhek7","title":"Root","desc":"The base of the project tree.","updated":1669496499921,"created":1663712926920,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"},"contentHash":"9b7c0238313c23f1c68b7df7aed0ce98","links":[{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"stack-overflow","alias":"Stack Overflow","position":{"start":{"line":8,"column":3,"offset":311},"end":{"line":8,"column":36,"offset":344},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"stack-overflow"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"unix-stack-exchange","alias":"Unix & Linux Stack Exchange","position":{"start":{"line":9,"column":3,"offset":347},"end":{"line":9,"column":54,"offset":398},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"unix-stack-exchange"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codewars","alias":"Codewars","position":{"start":{"line":10,"column":3,"offset":401},"end":{"line":10,"column":24,"offset":422},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codewars"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"codepen","alias":"Codepens","position":{"start":{"line":11,"column":3,"offset":425},"end":{"line":11,"column":23,"offset":445},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"codepen"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"euler","alias":"Euler Project","position":{"start":{"line":12,"column":3,"offset":448},"end":{"line":12,"column":26,"offset":471},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"euler"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"foobar","alias":"Google FooBar","position":{"start":{"line":13,"column":3,"offset":474},"end":{"line":13,"column":27,"offset":498},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"foobar"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"hackthebox","alias":"HackTheBox Ops Notes","position":{"start":{"line":14,"column":3,"offset":501},"end":{"line":14,"column":38,"offset":536},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"hackthebox"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"medium","alias":"Medium Articles","position":{"start":{"line":15,"column":3,"offset":539},"end":{"line":15,"column":29,"offset":565},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"medium"}},{"type":"wiki","from":{"fname":"root","id":"igmh0dqdu0a6b80x03hhek7","vaultName":"bits-and-bobbles"},"value":"cybersoc","alias":"CyberSoc","position":{"start":{"line":16,"column":3,"offset":568},"end":{"line":16,"column":24,"offset":589},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"cybersoc"}}],"anchors":{"welcome-to-bits-and-bobbles":{"type":"header","text":"Welcome to bits-and-bobbles","value":"welcome-to-bits-and-bobbles","line":8,"column":0,"depth":1},"whats-here":{"type":"header","text":"What's here?","value":"whats-here","line":12,"column":0,"depth":2}},"children":["onxeajmr7gys0sljngxqj91","b42r0s0g9g25atrilu3dwqb","0hdyi29cv9mqvatjv6zaj7q","1ug1cew47dmye00nz5trwaa","vm8lo115nu0nbqvdz24ugf1","yqqzccfk3pgp9zvpzpptltr","6jdidhs50140ik9c0nhx7kl","djibocawvr9giosnl1nlori","gn88vvdrli6x8uz1bg9a263"],"parent":null,"data":{},"body":"\n# Welcome to bits-and-bobbles\n\nThis is the root of my project, an assortment of fragments of code that I have written in the past or used frequently enough that I think they are worth sharing. Please feel free to use them as you see fit, and share and leave a star if you find them useful!\n\n## What's here?\n\n- [[Stack Overflow|stack-overflow]]\n- [[Unix & Linux Stack Exchange|unix-stack-exchange]]\n- [[Codewars|codewars]]\n- [[Codepens|codepen]]\n- [[Euler Project|euler]]\n- [[Google FooBar|foobar]]\n- [[HackTheBox Ops Notes|hackthebox]]\n- [[Medium Articles|medium]]\n- [[CyberSoc|cybersoc]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"bits-and-bobbles"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"assetsPrefix":"/bits-and-bobbles","siteUrl":"https://ajmeese7.github.io","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}